/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// PullerSpecApplyConfiguration represents an declarative configuration of the PullerSpec type for use
// with apply.
type PullerSpecApplyConfiguration struct {
	Registries        []RegistryApplyConfiguration `json:"registries,omitempty"`
	NamespaceAffinity *v1.LabelSelector            `json:"namespaceAffinity,omitempty"`
}

// PullerSpecApplyConfiguration constructs an declarative configuration of the PullerSpec type for use with
// apply.
func PullerSpec() *PullerSpecApplyConfiguration {
	return &PullerSpecApplyConfiguration{}
}

// WithRegistries adds the given value to the Registries field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Registries field.
func (b *PullerSpecApplyConfiguration) WithRegistries(values ...*RegistryApplyConfiguration) *PullerSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithRegistries")
		}
		b.Registries = append(b.Registries, *values[i])
	}
	return b
}

// WithNamespaceAffinity sets the NamespaceAffinity field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NamespaceAffinity field is set to the value of the last call.
func (b *PullerSpecApplyConfiguration) WithNamespaceAffinity(value v1.LabelSelector) *PullerSpecApplyConfiguration {
	b.NamespaceAffinity = &value
	return b
}
